{"version":3,"sources":["components/Card/index.js","components/Preview/index.js","App.js","serviceWorker.js","index.js"],"names":["transArr","activeIndex","activeList","rectInfo","updateStatus","zIndex","cardIndex","listData","Array","fill","map","item","index","getArrByLen","len","Card","listRef","React","createRef","state","animateStatus","inputValue","this","updateAnimateStatus","_this2","stepIndex","forEach","itemEle","getBoundingClientRect","left","top","some","v","k","setState","length","setTimeout","type","currentIndex","prototype","slice","call","current","children","newListData","concat","filter","value","e","target","console","log","_this3","_this$state","react_default","a","createElement","Fragment","className","ref","key","style","Object","assign","transform","onClick","updateItem","bind","title","onChange","inputIndex","Component","previewVisibleStatus","currentPreviewEle","previewFirstRect","previewLastRect","scaleValue","width","getSize","height","bgPic","Math","random","toString","substr","round","Preview","previewRef","previewStatus","previewImgInfo","updatePreviewStatus","lastRectInfo","status","arguments","undefined","previewItem","src","alt","opacity","transformOrigin","onTransitionEnd","transEnd","App","showIndex","mt","window","location","search","match","changeCor","Card_Card","Preview_Preview","Boolean","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b6954147.chunk.js","sourcesContent":["import React from 'react'\nimport './index.css'\n\nlet transArr = null\nlet activeIndex = 100000\nlet activeList = null\nlet rectInfo = null\n// 0标识增加，1标识删除\nlet updateStatus = 0\n// 用于调整 card层级，让排列层级变化的 card在动画过程中不被其他 card遮盖\nlet zIndex = 1\nlet cardIndex = 2\n// 生成初始测试数据\nlet listData = Array(cardIndex).fill().map((item, index) => ({\n  index\n}))\n// 生成一个二维数组\nfunction getArrByLen(len) {\n  return Array(len).fill().map(() => [0, 0])\n}\n\nexport default class Card extends React.Component {\n  listRef = React.createRef()\n  state = {\n    // 用于标记动画的状态\n    animateStatus: 0,\n    listData,\n    inputValue: 0\n  }\n  componentDidUpdate () {\n    // card 更新\n    this.updateAnimateStatus()\n  }\n  updateAnimateStatus () {\n    if (this.state.animateStatus === 1) {\n      // Last + Invert\n      const stepIndex = updateStatus === 0 ? 1 : 0\n      activeList.forEach((itemEle, index) => {\n        rectInfo = itemEle.getBoundingClientRect()\n        transArr[index + stepIndex][0] = transArr[index + stepIndex][0] - rectInfo.left\n        transArr[index + stepIndex][1] = transArr[index + stepIndex][1] - rectInfo.top\n        // 横排的层级变化，则进行 z-index的提升以获得更好的视觉体验\n        if (transArr[index + stepIndex][1] !== 0) {\n          this.state.listData.some((v, k) => {\n            if (index + stepIndex + activeIndex === k) {\n              v.zIndex = zIndex++\n              return true\n            }\n            return false\n          })\n        }\n      })\n      this.setState({\n        animateStatus: 2\n      })\n    } else if (this.state.animateStatus === 2) {\n      // Play\n      // 重置\n      transArr = getArrByLen(this.state.listData.length)\n      setTimeout(() => {\n        this.setState({\n          animateStatus: 3\n        })\n      }, 0)\n    }\n  }\n  updateItem (type, currentIndex) {\n    updateStatus = type\n    activeIndex = currentIndex\n    // 位置需要进行改变的节点（可以大致认为位于当前变化节点之前的所有节点，位置完全不变）\n    // 如果是删除操作，则 slice的起始坐标需要往后移一位\n    activeList = Array.prototype.slice.call(this.listRef.current.children).slice(activeIndex + (updateStatus === 0 ? 0 : 1))\n    // 如果是增加操作，则 transArr2的长度应该比 activeList 多 1\n    const stepIndex = updateStatus === 0 ? 1 : 0\n    transArr = getArrByLen(activeList.length + stepIndex)\n    // First\n    activeList.forEach((itemEle, index) => {\n      rectInfo = itemEle.getBoundingClientRect()\n      transArr[index + stepIndex][0] = rectInfo.left\n      transArr[index + stepIndex][1] = rectInfo.top\n    })\n    let newListData = null\n    if (updateStatus === 0) {\n      newListData = this.state.listData.slice(0, activeIndex).concat({\n        index: cardIndex++\n      }, this.state.listData.slice(activeIndex))\n    } else {\n      newListData = this.state.listData.filter((value, index) => index !== activeIndex)\n    }\n    this.setState({\n      animateStatus: 1,\n      listData: newListData\n    })\n  }\n  inputIndex (e) {\n    let inputValue = +e.target.value\n    if (inputValue > this.state.listData.length) {\n      console.log('新增item的 index不能超过 listData的长度')\n      inputValue = this.state.listData.length\n    }\n    this.setState({\n      inputValue,\n      animateStatus: 0\n    })\n  }\n  render () {\n    const { animateStatus, inputValue } = this.state\n    return (\n      <>\n        <ul className=\"card-list\" ref={this.listRef}>\n          {\n            this.state.listData.map((item, index) => (\n              <li\n                key={item.index}\n                className={`card-item${index >= activeIndex && animateStatus === 3 ? ' active' : ''}`}\n                style={\n                  Object.assign({ zIndex: item.zIndex || 'auto' }, index >= activeIndex && animateStatus > 1\n                    ? {transform: `translate(${transArr[index - activeIndex][0]}px, ${transArr[index - activeIndex][1]}px)`}\n                    : null)\n                }>\n                  <div className=\"card-title\">\n                    <h3>Title - {item.index}</h3>\n                    <span onClick={this.updateItem.bind(this, 1, index)} className=\"icon-btn\" title=\"点击删除\">Delete</span>\n                  </div>\n                  <div className=\"card-content\">\n                    <p className=\"content\">content - {item.index}</p>\n                    <p className=\"content\">content - {item.index}</p>\n                    <p className=\"content\">content - {item.index}</p>\n                  </div>\n                </li>\n            ))\n          }\n        </ul>\n        <hr/>\n        <div className=\"update-count\">\n          <input onChange={this.inputIndex.bind(this)} value={inputValue} type=\"number\" />\n          <button onClick={this.updateItem.bind(this, 0, inputValue)}>增加</button>\n        </div>\n      </>\n    )\n  }\n}\n","import React from 'react'\nimport './index.css'\n\n// 标识预览的状态，1：显示，2：开始关闭，3：已关闭\nlet previewVisibleStatus = 3\n// 当前预览的元素\nlet currentPreviewEle = null\n// 记录动画起始状态的元素位置信息，left, top\nconst previewFirstRect = [0, 0]\nconst previewLastRect = [0, 0]\n// 临时记录位置信息\nlet rectInfo = null\n// First与Last两个状态之间的缩放比例\nlet scaleValue = 1\n// 生成初始测试数据\nlet listData = Array(10).fill().map(() => {\n  const width = getSize()\n  const height = getSize()\n  return {\n    width,\n    height,\n    bgPic: `https://dummyimage.com/${width}x${height}/${color16()}`\n  }\n})\n\n// 获取在 200-900之间的随机整数\nfunction getSize () {\n  return Math.round(Math.random() * 700 + 200)\n}\n// 生成随机 16进制颜色\nfunction color16(){\n  return ('00000' + (Math.random() * 0x1000000 << 0).toString(16)).substr(-6)\n}\n\nexport default class Preview extends React.Component {\n  previewRef = React.createRef()\n  state = {\n    previewStatus: 0,\n    previewImgInfo: null\n  }\n  componentDidUpdate () {\n    // card 预览\n    this.updatePreviewStatus()\n  }\n  updatePreviewStatus () {\n    if (this.state.previewStatus === 1) {\n      // Last + Invert\n      if (previewVisibleStatus === 1) {\n        const lastRectInfo = this.previewRef.current.getBoundingClientRect()\n        previewLastRect[0] = lastRectInfo.left\n        previewLastRect[1] = lastRectInfo.top\n        scaleValue = rectInfo.width / lastRectInfo.width\n      }\n      this.setState({\n        previewStatus: 2\n      })\n    } else if (this.state.previewStatus === 2) {\n      // Play\n      setTimeout(() => {\n        this.setState({\n          previewStatus: 3\n        })\n      }, 0)\n    }\n  }\n  previewItem (status, previewImgInfo = null, e) {\n    previewVisibleStatus = status\n    if (previewVisibleStatus === 1) {\n      currentPreviewEle = e.target\n      // First\n      rectInfo = currentPreviewEle.getBoundingClientRect()\n      previewFirstRect[0] = rectInfo.left\n      previewFirstRect[1] = rectInfo.top\n      this.setState({\n        previewImgInfo,\n        previewStatus: 1\n      })\n    } else {\n      this.setState({\n        previewStatus: 1\n      })\n    }\n  }\n  transEnd (e) {\n    if (previewVisibleStatus === 2 && previewVisibleStatus !== 3) {\n      previewVisibleStatus = 3\n      this.setState({\n        previewStatus: 0\n      })\n    }\n  }\n  render () {\n    const { previewStatus, previewImgInfo } = this.state\n    return (\n      <>\n        <ul className=\"pic-list\">\n          {\n            listData.map((item, index) => (\n              <li\n                key={index}\n                className=\"pic-item\"\n                onClick={this.previewItem.bind(this, 1, item)}\n                title=\"点击预览\">\n                <img src={item.bgPic} alt=\"\" className=\"pic\" />\n              </li>\n            ))\n          }\n        </ul>\n        {\n          (previewVisibleStatus === 1 || previewVisibleStatus === 2) ? (\n            <>\n              <div className=\"preview-box\"\n                onClick={this.previewItem.bind(this, 2)}\n                style={{\n                  opacity: previewStatus === 3 && previewVisibleStatus !== 2 ? .65 : 0\n                }}></div>\n              <img\n                ref={this.previewRef}\n                className={`img${(previewStatus === 3 && previewVisibleStatus === 1) || previewVisibleStatus === 2 ? ' active' : ''}`}\n                src={previewImgInfo.bgPic}\n                style={{\n                  transform: previewStatus === 2 || previewVisibleStatus === 2\n                    ? `translate3d(${previewFirstRect[0] - previewLastRect[0]}px, ${previewFirstRect[1] - previewLastRect[1]}px, 0) scale(${scaleValue})`\n                    : 'translate3d(0, 0, 0) scale(1)',\n                  transformOrigin: '0 0'\n                }}\n                onClick={this.previewItem.bind(this, 2)}\n                onTransitionEnd={this.transEnd.bind(this)}\n                alt=\"\" />\n            </>\n          ) : null\n        }\n      </>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport './App.css'\n\n// 卡片 Card增删动画\nimport Card from './components/Card'\n// 图片放大/恢复动画\nimport Preview from './components/Preview'\n\nclass App extends Component {\n  state = {\n    showIndex: 0\n  }\n  componentDidMount () {\n    const mt = window.location.search.match(/showIndex=(\\d)/)\n    if (mt) {\n      this.setState({\n        showIndex: +mt[1]\n      })\n    }\n  }\n  changeCor (showIndex) {\n    this.setState({\n      showIndex\n    })\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"route\">\n          <span onClick={this.changeCor.bind(this, 0)}>点击切换到 卡片增删动效</span>\n          <span onClick={this.changeCor.bind(this, 1)}>点击切换到 图片放大预览/活肤动效</span>\n        </div>\n        <hr/>\n        {\n          this.state.showIndex === 0\n            ? <Card />\n            : <Preview />\n        }\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}